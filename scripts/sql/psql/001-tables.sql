-- CREATE EXTENSION uint128;
CREATE EXTENSION if not exists pg_cron;
CREATE EXTENSION if not exists timescaledb;



CREATE TABLE IF NOT EXISTS flows
(
    id          bigint generated by default as identity,
    inserted_at timestamp default now() not null,
    exporter    inet,
    srcaddr     inet,
    dstaddr     inet,
    input       integer,
    output      integer,
    dpkts       integer,
    doctets     integer,
    srcport     integer,
    dstport     integer,
    tcp_flags   integer,
    prot        integer,
    tos         integer,
    src_as      integer,
    dst_as      integer,
    src_mask    integer,
    dst_mask    integer,
    ip_version  integer,

    first       timestamp,
    last        timestamp,
    PRIMARY KEY (id, exporter, first)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'first',
      timescaledb.segmentby = 'exporter'
      );



create table public.flows_agg_5min
(
    id            bigint generated by default as identity,
    bucket_5min   timestamp not null,
    exporter      inet      not null,
    srcaddr       inet,
    dstaddr       inet,
    input         integer,
    output        integer,
    total_packets bigint,
    total_octets  bigint,
    srcport       integer,
    dstport       integer,
    tcp_flags     integer,
    prot          integer,
    tos           integer,
    src_as        integer,
    dst_as        integer,
    src_mask      integer,
    dst_mask      integer,
    ip_version    integer,
    primary key (id, exporter, bucket_5min),
    constraint flows_agg_5min_unique
        unique (bucket_5min, exporter, srcaddr, dstaddr, srcport, dstport, prot, src_as, dst_as, input, output,
                ip_version, tos)
);

alter table public.flows_agg_5min
    owner to cnetflow;

create index flows_agg_5min_bucket_5min_idx
    on public.flows_agg_5min (bucket_5min desc);

SELECT create_hypertable('flows_agg_5min', 'bucket_5min');
SELECT add_dimension('flows_agg_5min', by_hash('exporter', 10240));
SELECT set_chunk_time_interval('flows', INTERVAL '10 minutes');
SELECT set_chunk_time_interval('flows_agg_5min', INTERVAL '1 hour');


CREATE TABLE IF NOT EXISTS exporters
(
    id                bigint generated by default as identity,
    created_at        timestamp         default now() not null,
    ip_bin            integer  not null default 0,
    ip_inet           inet     not null default '127.0.0.1'::inet,
    name              varchar  not null default '',
    snmp_version      smallint not null default 0,
    snmp_community    varchar  not null default '',
    snmpv3_username   varchar  not null default '',
    snmpv3_level      varchar  not null default '',
    snmpv3_auth_proto varchar  not null default '',
    snmpv3_auth_pass  varchar  not null default '',
    snmpv3_priv_proto varchar  not null default '',
    snmpv3_priv_pass  varchar  not null default '',
    data              json     not null default '{}',
    PRIMARY KEY (id, name, ip_bin, ip_inet)
);
alter table public.exporters
    owner to cnetflow;

CREATE TABLE IF NOT EXISTS interfaces
(
    id          bigint generated by default as identity,
    created_at  timestamp        default now() not null,
    exporter    bigint  not null default 0,
    snmp_index  bigint  not null default 0,
    name        varchar not null default '',
    description varchar not null default '',
    alias       varchar not null default '',
    speed       bigint  not null default 0,
    enabled     boolean not null default true,
    bandwidth   bigint  not null default 0,
    PRIMARY KEY (id, snmp_index, exporter)
);
alter table public.interfaces
    owner to cnetflow;


CREATE TABLE IF NOT EXISTS interface_metrics
(
    inserted_at timestamp       default now() not null,
    id          bigint generated by default as identity,
    exporter    bigint not null default 0,
    snmp_index  bigint not null default 0,
    octets_in   bigint not null default 0,
    octets_out  bigint not null default 0,
    PRIMARY KEY (id, inserted_at, exporter)
);
SELECT create_hypertable('interface_metrics', 'inserted_at');
SELECT add_dimension('interface_metrics', by_hash('exporter', 10240));
SELECT set_chunk_time_interval('interface_metrics', INTERVAL '1 hour');
alter table public.interface_metrics
    owner to cnetflow;


CREATE TABLE IF NOT EXISTS services
(
    id   bigint generated by default as identity
        primary key,
    addr integer,
    port smallint,
    name varchar
);
alter table public.services
    owner to cnetflow;

CREATE TABLE IF NOT EXISTS config
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp default now() not null,
    key_name   varchar,
    key_value  varchar,
    data       json
);
alter table public.config
    owner to cnetflow;


CREATE TABLE IF NOT EXISTS protocols
(
    id          integer default 0 not null,
    name        varchar           not null,
    description varchar           not null
);
alter table public.protocols
    owner to cnetflow;
-- SELECT add_dimension('flows_agg_5min', by_hash('exporter_hash', 10240));

create role web_anon nologin;
grant usage on schema public to web_anon;
grant select on public.exporters to web_anon;
grant select on public.flows to web_anon;
grant select on public.flows_agg_5min to web_anon;
grant select on public.config to web_anon;
grant select on public.interface_metrics to web_anon;
grant select on public.services to web_anon;
grant select on public.interfaces to web_anon;
ALTER DATABASE postgres SET timezone TO 'America/Argentina/Buenos_Aires';

