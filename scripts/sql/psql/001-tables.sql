-- CREATE EXTENSION uint128;
CREATE EXTENSION if not exists pg_cron;
CREATE EXTENSION if not exists timescaledb;
create table flows_v5
(
    id        bigint generated by default as identity,
    srcaddr   integer,
    dstaddr   integer,
    input     integer,
    output    integer,
    dpkts     integer,
    doctets   integer,
    srcport   smallint,
    dstport   smallint,
    tcp_flags char,
    prot      char,
    tos       char,
    src_as    smallint,
    dst_as    smallint,
    src_mask  char,
    dst_mask  char,
    exporter  integer,
    first     integer,
    last      integer,
    PRIMARY KEY (id, exporter, first)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'first',
      timescaledb.segmentby = 'exporter'
      );
create table flows_v9
(
    id        bigint generated by default as identity,
    srcaddr   integer,
    dstaddr   integer,
    input     integer,
    output    integer,
    dpkts     bigint,
    doctets   bigint,
    srcport   smallint,
    dstport   smallint,
    tcp_flags char,
    prot      char,
    tos       char,
    src_as    smallint,
    dst_as    smallint,
    src_mask  char,
    dst_mask  char,
    exporter  integer,
    first     integer,
    last      integer,
    PRIMARY KEY (id, exporter, first)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'first',
      timescaledb.segmentby = 'exporter'
      );

CREATE TABLE IF NOT EXISTS flows_v5_agg_5min
(
    id            bigint generated by default as identity,
    bucket_5min   TIMESTAMP NOT NULL,
    exporter      INET      NOT NULL,
    srcaddr       INET      NOT NULL,
    dstaddr       INET      NOT NULL,
    srcport       INTEGER   NOT NULL,
    dstport       INTEGER   NOT NULL,
    protocol      INTEGER   NOT NULL,
    src_as        INTEGER   NOT NULL,
    dst_as        INTEGER   NOT NULL,
    input         INTEGER,
    output        INTEGER,
    total_packets BIGINT,
    total_octets  BIGINT,
    PRIMARY KEY (bucket_5min, exporter, srcaddr, dstaddr, srcport, dstport, protocol, src_as, dst_as, input, output)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'bucket_5min',
      timescaledb.segmentby = 'exporter'
      );



create table if not exists exporters
(
    id                bigint generated by default as identity,
    created_at        timestamp         default now() not null,
    ip_bin            integer  not null default 0,
    ip_inet           inet     not null default '127.0.0.1'::inet,
    name              varchar  not null default '',
    snmp_version      smallint not null default 0,
    snmp_community    varchar  not null default '',
    snmpv3_username   varchar  not null default '',
    snmpv3_level      varchar  not null default '',
    snmpv3_auth_proto varchar  not null default '',
    snmpv3_auth_pass  varchar  not null default '',
    snmpv3_priv_proto varchar  not null default '',
    snmpv3_priv_pass  varchar  not null default '',
    data              json     not null default '{}',
    PRIMARY KEY (id, name, ip_bin, ip_inet)
);

create table if not exists interfaces
(
    id          bigint generated by default as identity,
    created_at  timestamp        default now() not null,
    exporter    bigint  not null default 0,
    snmp_index  bigint  not null default 0,
    name        varchar not null default '',
    description varchar not null default '',
    alias       varchar not null default '',
    speed       bigint  not null default 0,
    enabled     boolean not null default true,
    bandwidth   bigint  not null default 0,
    PRIMARY KEY (id, snmp_index, exporter)
);


create table if not exists interface_metrics
(
    inserted_at timestamp       default now() not null,
    id          bigint generated by default as identity,
    exporter    bigint not null default 0,
    snmp_index  bigint not null default 0,
    octets_in   bigint not null default 0,
    octets_out  bigint not null default 0,
    PRIMARY KEY (id, inserted_at)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'inserted_at',
      timescaledb.segmentby = 'exporter'
      );



create table if not exists services
(
    id   bigint generated by default as identity
        primary key,
    addr integer,
    port smallint,
    name varchar
);


create table if not exists config
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp default now() not null,
    key_name   varchar,
    key_value  varchar,
    data       json
);


CREATE TABLE IF NOT EXISTS flows_v9_agg_5min
(
    id            bigint generated by default as identity,
    bucket_5min   TIMESTAMP NOT NULL,
    exporter      INET      NOT NULL,
    srcaddr       INET      NOT NULL,
    dstaddr       INET      NOT NULL,
    srcport       INTEGER   NOT NULL,
    dstport       INTEGER   NOT NULL,
    protocol      INTEGER   NOT NULL,
    src_as        smallint  NOT NULL,
    dst_as        smallint  NOT NULL,
    input         INTEGER,
    output        INTEGER,
    total_packets BIGINT,
    total_octets  BIGINT,
    PRIMARY KEY (bucket_5min, exporter, srcaddr, dstaddr, srcport, dstport, protocol, src_as, dst_as, input, output)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'bucket_5min',
      timescaledb.segmentby = 'exporter'
      );
CREATE TABLE IF NOT EXISTS flows_v5_agg_30min
(
    id            bigint generated by default as identity,
    bucket_30min  TIMESTAMP NOT NULL,
    exporter      INET      NOT NULL,
    srcaddr       INET      NOT NULL,
    dstaddr       INET      NOT NULL,
    srcport       INTEGER   NOT NULL,
    dstport       INTEGER   NOT NULL,
    protocol      INTEGER   NOT NULL,
    src_as        smallint  NOT NULL,
    dst_as        smallint  NOT NULL,
    input         INTEGER,
    output        INTEGER,
    total_packets BIGINT,
    total_octets  BIGINT,
    PRIMARY KEY (bucket_30min, exporter, srcaddr, dstaddr, srcport, dstport, protocol, src_as, dst_as, input, output)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'bucket_30min',
      timescaledb.segmentby = 'exporter'
      );

CREATE TABLE IF NOT EXISTS flows_v9_agg_30min
(
    id            bigint generated by default as identity,
    bucket_30min  TIMESTAMP NOT NULL,
    exporter      INET      NOT NULL,
    srcaddr       INET      NOT NULL,
    dstaddr       INET      NOT NULL,
    srcport       INTEGER   NOT NULL,
    dstport       INTEGER   NOT NULL,
    protocol      INTEGER   NOT NULL,
    src_as        smallint  NOT NULL,
    dst_as        smallint  NOT NULL,
    input         INTEGER,
    output        INTEGER,
    total_packets BIGINT,
    total_octets  BIGINT,
    PRIMARY KEY (bucket_30min, exporter, srcaddr, dstaddr, srcport, dstport, protocol, src_as, dst_as, input, output)
) WITH (
      timescaledb.hypertable,
      timescaledb.partition_column = 'bucket_30min',
      timescaledb.segmentby = 'exporter'
      );

SELECT add_dimension('flows_v9_agg_5min', by_hash('exporter', 10240));
SELECT add_dimension('flows_v5_agg_5min', by_hash('exporter', 10240));

SELECT add_dimension('flows_v9_agg_30min', by_hash('exporter', 10240));
SELECT add_dimension('flows_v5_agg_30min', by_hash('exporter', 10240));

create role web_anon nologin;
grant usage on schema public to web_anon;
grant select on public.exporters to web_anon;
grant select on public.flows_v5 to web_anon;
grant select on public.flows_v9 to web_anon;
grant select on public.config to web_anon;
grant select on public.interface_metrics to web_anon;
grant select on public.services to web_anon;
grant select on public.interfaces to web_anon;
grant select on public.flows_v9_agg_5min to web_anon;
grant select on public.flows_v5_agg_5min to web_anon;
ALTER DATABASE postgres SET timezone TO 'America/Argentina/Buenos_Aires';